rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Test mode: Allow read/write access to all documents
    match /{document=**} {
      allow read, write: if true;
    }

    // Production rules (commented out during development)
    // Uncomment and remove test mode rule when ready for production
    /*
    // User profiles are readable by anyone but only writable by the owner
    match /users/{userId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == userId;
    }
    
    // Projects and their subcollections
    match /projects/{projectId} {
      allow read: if request.auth != null && (
        resource.data.user_id == request.auth.uid ||
        exists(/databases/$(database)/documents/projects/$(projectId)/collaborators/$(request.auth.uid))
      );
      allow create: if request.auth != null;
      allow update, delete: if request.auth != null && resource.data.user_id == request.auth.uid;
      
      // Subcollection rules
      match /media_assets/{assetId} {
        allow read, write: if request.auth != null && (
          get(/databases/$(database)/documents/projects/$(projectId)).data.user_id == request.auth.uid ||
          exists(/databases/$(database)/documents/projects/$(projectId)/collaborators/$(request.auth.uid))
        );
      }
      
      match /edit_sessions/{sessionId} {
        allow read, write: if request.auth != null && (
          get(/databases/$(database)/documents/projects/$(projectId)).data.user_id == request.auth.uid ||
          exists(/databases/$(database)/documents/projects/$(projectId)/collaborators/$(request.auth.uid))
        );
      }
      
      match /collaborators/{collaboratorId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && 
          get(/databases/$(database)/documents/projects/$(projectId)).data.user_id == request.auth.uid;
      }
      
      match /analytics/{analyticsId} {
        allow read: if request.auth != null;
        allow write: if request.auth != null && 
          get(/databases/$(database)/documents/projects/$(projectId)).data.user_id == request.auth.uid;
      }
    }
    */
  }
} 